# Generated by Django 3.2.3 on 2022-12-21 17:21

import uuid

import django.db.models.deletion
import rules.contrib.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("etickets_v2", "0004_alter_reservation_service"),
    ]

    operations = [
        migrations.CreateModel(
            name="Agency",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                (
                    "local_ip",
                    models.CharField(blank=True, max_length=15, null=True, unique=True),
                ),
                ("is_active", models.BooleanField(default=False)),
                (
                    "latitude",
                    models.DecimalField(
                        decimal_places=7, default=36.797423, max_digits=10
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        decimal_places=7, default=10.165894, max_digits=10
                    ),
                ),
                ("weekday_first_start", models.TimeField()),
                ("weekday_first_end", models.TimeField()),
                ("weekday_second_start", models.TimeField()),
                ("weekday_second_end", models.TimeField()),
                ("saturday_first_start", models.TimeField(blank=True, null=True)),
                ("saturday_first_end", models.TimeField(blank=True, null=True)),
                ("saturday_second_start", models.TimeField(blank=True, null=True)),
                ("saturday_second_end", models.TimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "municipality",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="local_agencies",
                        to="backend.municipality",
                    ),
                ),
            ],
            options={
                "verbose_name": "agency",
                "verbose_name_plural": "agencies",
                "ordering": ["-name"],
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.CharField(max_length=255)),
                ("is_active", models.BooleanField(default=False)),
                ("last_booked_ticket", models.IntegerField(blank=True, null=True)),
                ("current_ticket", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service",
                        to="etickets_v2.agency",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-name"],
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ticket_num", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_physical", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="e_reservations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="etickets_v2.service",
                    ),
                ),
            ],
        ),
    ]
