# Generated by Django 2.2.12 on 2020-12-06 13:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("backend", "0070_auto_20201203_1301"),
    ]

    operations = [
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("starting_date", models.DateTimeField()),
                ("ending_date", models.DateTimeField()),
                ("host", models.CharField(max_length=255)),
                ("is_published", models.BooleanField()),
                ("request_reception_message", models.CharField(max_length=1000)),
                ("max_reservations", models.IntegerField()),
                (
                    "reviewed_by",
                    models.ManyToManyField(
                        related_name="appointments", to="backend.Manager"
                    ),
                ),
                (
                    "suggested_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suggested_appointments",
                        to="backend.Manager",
                    ),
                ),
            ],
        ),
        migrations.AlterModelOptions(
            name="municipality",
            options={
                "ordering": ["-is_active"],
                "permissions": (
                    ("MANAGE_DOSSIERS", "Gerer les dossiers et demandes"),
                    ("MANAGE_PROCEDURES", "Gérer les procedures de la commune"),
                    ("MANAGE_COMPLAINTS", "Gérer les plaintes des citoyens"),
                    ("MANAGE_REPORTS", "Gerer les rapports du conseil municipal"),
                    (
                        "MANAGE_SUBJECT_ACCESS_REQUESTS",
                        "Gerer les demandes d'acces à l'information",
                    ),
                    ("MANAGE_COMMITTEES", "Gerer les comités du conseil municipal"),
                    ("MANAGE_NEWS", "Gerer les actualités de la commune"),
                    ("MANAGE_EVENTS", "Gerer les événements"),
                    (
                        "MANAGE_PERMISSIONS",
                        "Gerer les permissions de chaque membre sur la plateforme",
                    ),
                    ("MANAGE_APPOINTMENTS", "Gerer les rendez-vous"),
                ),
                "verbose_name_plural": "Municipalities",
            },
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(max_length=1000)),
                (
                    "reservation_state_citizen",
                    models.CharField(
                        choices=[
                            ("RECEIVED", "تم إستلام الطلب"),
                            ("PROCESSING", "بصدد \xa0معالجة الطلب"),
                            ("ACCEPTED", "تمت الموافقة على الطلب"),
                            ("REJECTED", "تعذر على البلدية الموافقة على الطلب"),
                        ],
                        default="ACCEPTED",
                        max_length=255,
                    ),
                ),
                (
                    "appointment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="backend.Appointment",
                    ),
                ),
                (
                    "citizen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="backend.Citizen",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Attachment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="reservation/attachment/")),
                (
                    "reservation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="backend.Reservation",
                    ),
                ),
            ],
        ),
    ]
